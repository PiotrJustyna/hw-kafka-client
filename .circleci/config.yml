defaults: &defaults
  working_directory: ~/build
  docker:
    - image: quay.io/haskell_works/stack-build-python

    - image: confluentinc/cp-zookeeper:3.1.2
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181

    - image: confluentinc/cp-kafka:3.1.2
      environment:
        KAFKA_ZOOKEEPER_CONNECT: "localhost:2181"
        KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_DELETE_TOPIC_ENABLE: "true"

  steps:
    - checkout

    - restore_cache:
        keys:
          - dot-stack-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.yaml" }}
          - dot-stack-{{ arch }}-{{ .Environment.CIRCLE_JOB }}

    - restore_cache:
        key: stack-work-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.yaml" }}

    - restore_cache:
        key: librdkafka--{{ arch }}-{{ checksum "scripts/build-librdkafka" }}

    - run:
        name: Build librdkafka
        command: ./scripts/build-librdkafka

    - save_cache:
        key: librdkafka--{{ arch }}-{{ checksum "scripts/build-librdkafka" }}
        paths: ~/build/.librdkafka

    - run: stack setup --resolver ${LTS}
    - run: stack build --test --no-run-tests --haddock --no-haddock-deps --resolver ${LTS}

    - save_cache:
        key: dot-stack-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
        paths:
          - ~/.stack

    - run:
        name: Running unit tests
        command: stack test --resolver ${LTS}

    - save_cache:
        key: dot-stack-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.yaml" }}
        paths:
          - ~/.stack

    - save_cache:
        key: stack-work-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.yaml" }}
        paths: ~/build/.stack-work

version: 2.0
jobs:
  lts-7:
    environment:
      - LTS: "lts-7"
    <<: *defaults

  lts-9:
    environment:
      - LTS: "lts-9"
    <<: *defaults

  lts-11:
    environment:
      - LTS: "lts-11"
    <<: *defaults

  nightly:
    environment:
      - LTS: "nightly"
    <<: *defaults

  release:
    working_directory: ~/build
    docker:
      - image: quay.io/haskell_works/stack-build-python

    steps:
      - checkout

      - run:
          name: Making a release
          command: ./scripts/release


workflows:
  version: 2
  multiple-ghcs:
    jobs:
      - lts-7
      - lts-9
      - lts-11
      - nightly
      - release:
          requires:
            - lts-7
            - lts-9
            - lts-11
            - nightly
          filters:
            branches:
              only: master

